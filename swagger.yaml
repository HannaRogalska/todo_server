openapi: 3.0.3
info:
  title: "Todos"
  version: "1.0.0"
servers:
  - url: http://localhost:3000
    description: "Development server"

paths:
  /todos:
    get:
      tags:
        - Todo
      description: "Return all todos"
      responses:
        "200":
          description: "A list of todos"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Todo"
    post:
      tags:
        - Todo
      description: "Create new todo"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: "Walk the dog"
      responses:
        "201":
          description: "Created new todo"

  /todos/{id}:
    get:
      tags:
        - Todo
      description: "Return one todo"
      parameters:
        - name: "id"
          in: "path"
          description: "id to fetch"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "One todo"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Todo"

  /user/register:
    post:
      summary: "Create a new user account"
      tags:
        - User
      description: "Register a new user by providing name, email, and password"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: "User created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User created"
        "400":
          description: "Email, name and password required"

components:
  schemas:
    Todo:
      type: object
      properties:
        _id:
          type: string
        text:
          type: string
        done:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        __v:
          type: integer

    User:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: "Hanna"
        email:
          type: string
          example: "example@gmail.com"
        password:
          type: string
          format: password
          example: "StrongPass123"
